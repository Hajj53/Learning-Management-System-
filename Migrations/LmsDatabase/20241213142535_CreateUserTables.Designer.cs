// <auto-generated />
using System;
using LMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Migrations.LmsDatabase
{
    [DbContext(typeof(LmsDatabaseContext))]
    [Migration("20241213142535_CreateUserTables")]
    partial class CreateUserTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.Models.Admin", b =>
                {
                    b.Property<int>("AId")
                        .HasColumnType("int")
                        .HasColumnName("A_id");

                    b.Property<string>("APassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("A_password");

                    b.HasKey("AId")
                        .HasName("PK__admin__71AD61D9A6676F2D");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Course", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("c_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CId"));

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("C_Name");

                    b.Property<int?>("DeptmentId")
                        .HasColumnType("int")
                        .HasColumnName("Deptment_id");

                    b.HasKey("CId")
                        .HasName("PK__Courses__213EE774772D5404");

                    b.HasIndex("DeptmentId");

                    b.HasIndex(new[] { "CName" }, "UQ__Courses__3006C73626A6B1CE")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LMS.Models.CourseReg", b =>
                {
                    b.Property<int?>("NoOfRegsStds")
                        .HasColumnType("int")
                        .HasColumnName("no_of_regs_stds");

                    b.Property<int>("RDept")
                        .HasColumnType("int")
                        .HasColumnName("r_dept");

                    b.Property<int>("RId")
                        .HasColumnType("int")
                        .HasColumnName("r_id");

                    b.Property<string>("RName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("r_name");

                    b.Property<int?>("RTeacher")
                        .HasColumnType("int")
                        .HasColumnName("r_teacher");

                    b.Property<string>("RTeacherName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("r_teacher_name");

                    b.HasIndex("RDept");

                    b.HasIndex("RId");

                    b.HasIndex("RName");

                    b.HasIndex("RTeacher");

                    b.ToTable("course_reg", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Department", b =>
                {
                    b.Property<int>("DId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("d_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DId"));

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("d_Name");

                    b.HasKey("DId")
                        .HasName("PK__Departme__D95F582BFCC824F2");

                    b.HasIndex(new[] { "DName" }, "UQ__Departme__024E29D685276768")
                        .IsUnique();

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Exam", b =>
                {
                    b.Property<int>("EId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("E_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("Course_id");

                    b.Property<string>("CourseName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Course_name");

                    b.Property<DateOnly>("EDate")
                        .HasColumnType("date")
                        .HasColumnName("E_date");

                    b.Property<TimeOnly>("ETime")
                        .HasColumnType("time")
                        .HasColumnName("E_time");

                    b.Property<string>("RNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("R_number");

                    b.HasKey("EId")
                        .HasName("PK__Exam__D7E94DACC4839A5B");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseName");

                    b.ToTable("Exam", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Schedule", b =>
                {
                    b.Property<int>("EId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("E_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("Course_id");

                    b.Property<string>("CourseName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Course_name");

                    b.Property<int?>("DeptmentId")
                        .HasColumnType("int")
                        .HasColumnName("Deptment_id");

                    b.Property<DateOnly>("EDate")
                        .HasColumnType("date")
                        .HasColumnName("E_date");

                    b.Property<TimeOnly?>("ETime")
                        .HasColumnType("time")
                        .HasColumnName("E_time");

                    b.Property<string>("RNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("R_number");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("Teacher_id");

                    b.HasKey("EId")
                        .HasName("PK__schedule__D7E94DAC21FCD7FA");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseName");

                    b.HasIndex("DeptmentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("schedule", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Student", b =>
                {
                    b.Property<int>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("S_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SId"));

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("phone number");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("S_Name");

                    b.Property<string>("SPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("S_Password");

                    b.HasKey("SId")
                        .HasName("PK__Student__A3DCCCA53FD2BE1B");

                    b.HasIndex(new[] { "Email" }, "UQ__Student__A9D105341B69794D")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Teacher", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("t_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TId"));

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("PhoneNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("phone number");

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("t_Name");

                    b.Property<string>("TPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("t_Password");

                    b.HasKey("TId")
                        .HasName("PK__Teacher__E579775F5A5C513F");

                    b.HasIndex(new[] { "Email" }, "UQ__Teacher__A9D10534F7A8D3C7")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("LMS.Models.Course", b =>
                {
                    b.HasOne("LMS.Models.Department", "Deptment")
                        .WithMany("Courses")
                        .HasForeignKey("DeptmentId")
                        .HasConstraintName("FK__Courses__Deptmen__5BE2A6F2");

                    b.Navigation("Deptment");
                });

            modelBuilder.Entity("LMS.Models.CourseReg", b =>
                {
                    b.HasOne("LMS.Models.Department", "RDeptNavigation")
                        .WithMany()
                        .HasForeignKey("RDept")
                        .IsRequired()
                        .HasConstraintName("FK__course_re__r_dep__0D7A0286");

                    b.HasOne("LMS.Models.Course", "RIdNavigation")
                        .WithMany()
                        .HasForeignKey("RId")
                        .IsRequired()
                        .HasConstraintName("FK__course_reg__r_id__0B91BA14");

                    b.HasOne("LMS.Models.Course", "RNameNavigation")
                        .WithMany()
                        .HasForeignKey("RName")
                        .HasPrincipalKey("CName")
                        .HasConstraintName("FK__course_re__r_nam__0C85DE4D");

                    b.HasOne("LMS.Models.Teacher", "RTeacherNavigation")
                        .WithMany()
                        .HasForeignKey("RTeacher")
                        .HasConstraintName("FK__course_re__r_tea__0E6E26BF");

                    b.Navigation("RDeptNavigation");

                    b.Navigation("RIdNavigation");

                    b.Navigation("RNameNavigation");

                    b.Navigation("RTeacherNavigation");
                });

            modelBuilder.Entity("LMS.Models.Exam", b =>
                {
                    b.HasOne("LMS.Models.Course", "Course")
                        .WithMany("ExamCourses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Exam__Course_id__02FC7413");

                    b.HasOne("LMS.Models.Course", "CourseNameNavigation")
                        .WithMany("ExamCourseNameNavigations")
                        .HasForeignKey("CourseName")
                        .HasPrincipalKey("CName")
                        .HasConstraintName("FK__Exam__Course_nam__03F0984C");

                    b.Navigation("Course");

                    b.Navigation("CourseNameNavigation");
                });

            modelBuilder.Entity("LMS.Models.Schedule", b =>
                {
                    b.HasOne("LMS.Models.Course", "Course")
                        .WithMany("ScheduleCourses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__schedule__Course__06CD04F7");

                    b.HasOne("LMS.Models.Course", "CourseNameNavigation")
                        .WithMany("ScheduleCourseNameNavigations")
                        .HasForeignKey("CourseName")
                        .HasPrincipalKey("CName")
                        .HasConstraintName("FK__schedule__Course__09A971A2");

                    b.HasOne("LMS.Models.Department", "Deptment")
                        .WithMany("Schedules")
                        .HasForeignKey("DeptmentId")
                        .HasConstraintName("FK__schedule__Deptme__07C12930");

                    b.HasOne("LMS.Models.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__schedule__Teache__08B54D69");

                    b.Navigation("Course");

                    b.Navigation("CourseNameNavigation");

                    b.Navigation("Deptment");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("LMS.Models.Course", b =>
                {
                    b.Navigation("ExamCourseNameNavigations");

                    b.Navigation("ExamCourses");

                    b.Navigation("ScheduleCourseNameNavigations");

                    b.Navigation("ScheduleCourses");
                });

            modelBuilder.Entity("LMS.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("LMS.Models.Teacher", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
